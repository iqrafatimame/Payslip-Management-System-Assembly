Microsoft (R) Macro Assembler Version 14.23.28106.4	    12/17/19 09:56:50
project.asm						     Page 1 - 1


				Include Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data

 00000000 09 09 09 2A 2A	titleOfProject BYTE "			************************ PAY SLIP MANAGEMENT SYSTEM ************************", 0
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 20 50 41
	   59 20 53 4C 49
	   50 20 4D 41 4E
	   41 47 45 4D 45
	   4E 54 20 53 59
	   53 54 45 4D 20
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 00
 00000050 53 65 6C 65 63	menu BYTE "Select from the following menu.", 0dh, 0ah
	   74 20 66 72 6F
	   6D 20 74 68 65
	   20 66 6F 6C 6C
	   6F 77 69 6E 67
	   20 6D 65 6E 75
	   2E 0D 0A
 00000071  20 0D 0A			 BYTE " ",  0dh, 0ah
 00000074  31 2E 20 45 6E	     BYTE "1. Enter today's data", 0dh, 0ah
	   74 65 72 20 74
	   6F 64 61 79 27
	   73 20 64 61 74
	   61 0D 0A
 0000008B  32 2E 20 41 70	     BYTE "2. Apply for leave", 0dh, 0ah
	   70 6C 79 20 66
	   6F 72 20 6C 65
	   61 76 65 0D 0A
 0000009F  33 2E 20 53 68	     BYTE "3. Show the report", 0dh, 0ah
	   6F 77 20 74 68
	   65 20 72 65 70
	   6F 72 74 0D 0A
 000000B3  34 2E 20 45 78	     BYTE "4. Exit", 0dh, 0ah, 0
	   69 74 0D 0A 00

 000000BD 45 6E 74 65 72	selection BYTE "Enter the number of your selection: ", 0
	   20 74 68 65 20
	   6E 75 6D 62 65
	   72 20 6F 66 20
	   79 6F 75 72 20
	   73 65 6C 65 63
	   74 69 6F 6E 3A
	   20 00

 000000E2 45 6E 74 65 72	nameEnter BYTE "Enter your name: ", 0
	   20 79 6F 75 72
	   20 6E 61 6D 65
	   3A 20 00
 000000F4 45 6E 74 65 72	dayEnter BYTE "Enter the day: ", 0
	   20 74 68 65 20
	   64 61 79 3A 20
	   00
 00000104 45 6E 74 65 72	hoursEnter BYTE "Enter number of hours you worked today: ", 0
	   20 6E 75 6D 62
	   65 72 20 6F 66
	   20 68 6F 75 72
	   73 20 79 6F 75
	   20 77 6F 72 6B
	   65 64 20 74 6F
	   64 61 79 3A 20
	   00

 0000012D 45 6E 74 65 72	leaveConfirmation BYTE "Enter 1 if you want to apply for leave and 0 to exit to main menu: ", 0
	   20 31 20 69 66
	   20 79 6F 75 20
	   77 61 6E 74 20
	   74 6F 20 61 70
	   70 6C 79 20 66
	   6F 72 20 6C 65
	   61 76 65 20 61
	   6E 64 20 30 20
	   74 6F 20 65 78
	   69 74 20 74 6F
	   20 6D 61 69 6E
	   20 6D 65 6E 75
	   3A 20 00
 00000171 59 6F 75 72 20	confirmedLeave BYTE "Your leave has been added.", 0
	   6C 65 61 76 65
	   20 68 61 73 20
	   62 65 65 6E 20
	   61 64 64 65 64
	   2E 00
 0000018C 4C 65 61 76 65	deniedLeave BYTE "Leave is not allowed.", 0
	   20 69 73 20 6E
	   6F 74 20 61 6C
	   6C 6F 77 65 64
	   2E 00

 000001A2 4E 61 6D 65 20	nameHeading BYTE "Name        ", 0
	   20 20 20 20 20
	   20 20 00
 000001AF 44 61 79 20 20	dayHeading BYTE "Day        ", 0
	   20 20 20 20 20
	   20 00
 000001BB 48 6F 75 72 73	hourHeading BYTE "Hours Worked		", 0
	   20 57 6F 72 6B
	   65 64 09 09 00

 000001CA 0000001E		salaryPerHour DWORD 30
 000001CE 00000028		totalHoursPerWeek DWORD 40
 000001D2 00			leaveCount BYTE 0
 000001D3 00000001		counter dword 1
 000001D7 00000000		printCounter dword 0
 000001DB 00000000		totalPay dword 0

 000001DF 00000000		day1 DWORD ?
 000001E3 00000000		day2 DWORD ?
 000001E7 00000000		day3 DWORD ?
 000001EB 00000000		day4 DWORD ?
 000001EF 00000000		day5 DWORD ?
 000001F3  0000000F [		nameOfEmployee BYTE 15 DUP (?)
	    00
	   ]
 00000202 00000000		hoursEmployeeWorkedOnDay1 DWORD ?
 00000206 00000000		hoursEmployeeWorkedOnDay2 DWORD ?
 0000020A 00000000		hoursEmployeeWorkedOnDay3 DWORD ?
 0000020E 00000000		hoursEmployeeWorkedOnDay4 DWORD ?
 00000212 00000000		hoursEmployeeWorkedOnDay5 DWORD ?
 00000216 20 20 20 20 20	space BYTE "        ", 0
	   20 20 20 00
 0000021F 20 2D 2D 2D 2D	error BYTE " ------------------------------ ", 0dh, 0ah
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 20 0D 0A
 00000241  7C 45 72 72 6F	      BYTE "|Error: This is invalid option.|", 0dh, 0ah
	   72 3A 20 54 68
	   69 73 20 69 73
	   20 69 6E 76 61
	   6C 69 64 20 6F
	   70 74 69 6F 6E
	   2E 7C 0D 0A
 00000263  20 2D 2D 2D 2D	      BYTE " ------------------------------ ", 0
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 20 00

 00000284 54 6F 74 61 6C	hoursPrompt BYTE "Total Hours Worked: ", 0
	   20 48 6F 75 72
	   73 20 57 6F 72
	   6B 65 64 3A 20
	   00
 00000299 54 6F 74 61 6C	totalPayPrompt BYTE "Total Pay: ", 0
	   20 50 61 79 3A
	   20 00
 000002A5 20 2D 2D 2D 2D	equals BYTE " ------------------------------ ", 0dh, 0ah
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 20 0D 0A
 000002C7  7C 20 45 6E 74	      BYTE "| Enter 1: For Monday |", 0dh, 0ah
	   65 72 20 31 3A
	   20 46 6F 72 20
	   4D 6F 6E 64 61
	   79 20 7C 0D 0A
 000002E0  7C 20 45 6E 74	      BYTE "| Enter 2: For Tuesday |", 0dh, 0ah
	   65 72 20 32 3A
	   20 46 6F 72 20
	   54 75 65 73 64
	   61 79 20 7C 0D
	   0A
 000002FA  7C 20 45 6E 74	      BYTE "| Enter 3: For Wednesday |", 0dh, 0ah
	   65 72 20 33 3A
	   20 46 6F 72 20
	   57 65 64 6E 65
	   73 64 61 79 20
	   7C 0D 0A
 00000316  7C 20 45 6E 74	      BYTE "| Enter 4: For Thursday |", 0dh, 0ah
	   65 72 20 34 3A
	   20 46 6F 72 20
	   54 68 75 72 73
	   64 61 79 20 7C
	   0D 0A
 00000331  7C 20 45 6E 74	      BYTE "| Enter 5: For Friday |", 0dh, 0ah
	   65 72 20 35 3A
	   20 46 6F 72 20
	   46 72 69 64 61
	   79 20 7C 0D 0A
 0000034A  20 2D 2D 2D 2D	      BYTE " ------------------------------ ", 0
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 20 00
 0000036B 54 68 69 73 20	check byte "This is a check", 0
	   69 73 20 61 20
	   63 68 65 63 6B
	   00

 00000000			.code

 00000000			calSum proc 

 00000000  A1 00000202 R		mov eax, hoursEmployeeWorkedOnDay1
 00000005  03 05 00000206 R		add eax, hoursEmployeeWorkedOnDay2
 0000000B  03 05 0000020A R		add eax, hoursEmployeeWorkedOnDay3
 00000011  03 05 0000020E R		add eax, hoursEmployeeWorkedOnDay4
 00000017  03 05 00000212 R		add eax, hoursEmployeeWorkedOnDay5

 0000001D  C3				ret

 0000001E			calSum endp

				print proto, day: dword, hourWorked: dword

 0000001E			main proc
						
 0000001E  E8 00000000 E	     call crlf
 00000023  BA 00000000 R		 mov edx, offset titleOfProject
 00000028  E8 00000000 E		 call writestring
 0000002D  E8 00000000 E		 call crlf
 00000032  E8 00000000 E		 call crlf

 00000037				 start:
						
 00000037  BA 00000050 R			   mov edx, offset menu
 0000003C  E8 00000000 E			   call writestring
 00000041  E8 00000000 E			   call crlf
 00000046  E8 00000000 E			   call crlf

 0000004B  BA 000000BD R			   mov edx, offset selection
 00000050  E8 00000000 E			   call writestring

 00000055  E8 00000000 E			   call readint

 0000005A  83 F8 01				cmp eax, 1
 0000005D  74 20				je L1
 0000005F  83 F8 02				cmp eax, 2
 00000062  0F 84 00000193			je L2
 00000068  83 F8 03				cmp eax, 3
 0000006B  0F 84 00000318			je L3
 00000071  83 F8 04				cmp eax, 4
 00000074  0F 84 00000437			je _exit

 0000007A  E9 00000414				jmp err


 0000007F					L1:
 0000007F  E8 00000000 E			   call crlf
 00000084  E8 00000000 E			   call crlf

 00000089  BA 000000E2 R				mov edx, offset nameEnter
 0000008E  E8 00000000 E				call writestring

 00000093  BA 000001F3 R				mov edx, offset nameOfEmployee
 00000098  B9 0000000F					mov ecx, sizeof nameOfEmployee
 0000009D  E8 00000000 E				call readstring	
 000000A2  E8 00000000 E				call crlf

 000000A7  BA 000002A5 R				mov edx, offset equals
 000000AC  E8 00000000 E				call writestring
 000000B1  E8 00000000 E				call crlf

 000000B6  BA 000000F4 R				mov edx, offset dayEnter
 000000BB  E8 00000000 E				call writestring

 000000C0  83 3D 000001D3 R				cmp counter, 1
	   01
 000000C7  74 24					je day_1
 000000C9  83 3D 000001D3 R				cmp counter, 2
	   02
 000000D0  74 2C					je day_2
 000000D2  83 3D 000001D3 R				cmp counter, 3
	   03
 000000D9  74 34					je day_3
 000000DB  83 3D 000001D3 R				cmp counter, 4
	   04
 000000E2  74 3C					je day_4
 000000E4  83 3D 000001D3 R				cmp counter, 5
	   05
 000000EB  74 44					je day_5

 000000ED						day_1: 
 000000ED  E8 00000000 E					call readint
 000000F2  A3 000001DF R					mov day1, eax
 000000F7  E8 00000000 E					call crlf
 000000FC  EB 44						jmp hours
 000000FE						day_2:
 000000FE  E8 00000000 E					call readint
 00000103  A3 000001E3 R					mov day2, eax
 00000108  E8 00000000 E					call crlf
 0000010D  EB 33						jmp hours

 0000010F						day_3:
 0000010F  E8 00000000 E					call readint
 00000114  A3 000001E7 R					mov day3, eax
 00000119  E8 00000000 E					call crlf
 0000011E  EB 22						jmp hours

 00000120						day_4:
 00000120  E8 00000000 E					call readint
 00000125  A3 000001EB R					mov day4, eax
 0000012A  E8 00000000 E					call crlf
 0000012F  EB 11						jmp hours

 00000131						day_5:
 00000131  E8 00000000 E					call readint
 00000136  A3 000001EF R					mov day5, eax
 0000013B  E8 00000000 E					call crlf
 00000140  EB 00						jmp hours
								

 00000142					hours:
 00000142  BA 00000104 R				mov edx, offset hoursEnter
 00000147  E8 00000000 E				call writestring

 0000014C  83 3D 000001D3 R				cmp counter, 1
	   01
 00000153  74 24					je monday
 00000155  83 3D 000001D3 R				cmp counter, 2
	   02
 0000015C  74 35					je tuesday
 0000015E  83 3D 000001D3 R				cmp counter, 3
	   03
 00000165  74 46					je wednesday
 00000167  83 3D 000001D3 R				cmp counter, 4
	   04
 0000016E  74 57					je thursday
 00000170  83 3D 000001D3 R				cmp counter, 5
	   05
 00000177  74 68					je friday
							
 00000179						monday: 
 00000179  E8 00000000 E					call readint
 0000017E  A3 00000202 R					mov hoursEmployeeWorkedOnDay1, eax
 00000183  E8 00000000 E					call crlf
 00000188  FF 05 000001D3 R					inc counter
 0000018E  E9 FFFFFEA4						jmp start


 00000193						tuesday:
 00000193  E8 00000000 E					call readint
 00000198  A3 00000206 R					mov hoursEmployeeWorkedOnDay2, eax
 0000019D  E8 00000000 E					call crlf
 000001A2  FF 05 000001D3 R					inc counter
 000001A8  E9 FFFFFE8A						jmp start

 000001AD						wednesday:

 000001AD  E8 00000000 E					call readint
 000001B2  A3 0000020A R					mov hoursEmployeeWorkedOnDay3, eax
 000001B7  E8 00000000 E					call crlf
 000001BC  FF 05 000001D3 R					inc counter
 000001C2  E9 FFFFFE70						jmp start

 000001C7						thursday:

 000001C7  E8 00000000 E					call readint
 000001CC  A3 0000020E R					mov hoursEmployeeWorkedOnDay4, eax
 000001D1  E8 00000000 E					call crlf
 000001D6  FF 05 000001D3 R					inc counter
 000001DC  E9 FFFFFE56						jmp start

 000001E1						friday:
								
 000001E1  E8 00000000 E					call readint
 000001E6  A3 00000212 R					mov hoursEmployeeWorkedOnDay5, eax
 000001EB  E8 00000000 E					call crlf
 000001F0  FF 05 000001D3 R					inc counter
 000001F6  E9 FFFFFE3C						jmp start

 000001FB					L2:
 000001FB  E8 00000000 E				call crlf
 00000200  BA 0000012D R				mov edx, offset leaveConfirmation
 00000205  E8 00000000 E				call writestring
 0000020A  E8 00000000 E				call readint
							
 0000020F  83 F8 00					cmp eax, 0
 00000212  0F 84 FFFFFE1F				je start

 00000218  FE 05 000001D2 R				inc leaveCount
 0000021E  80 3D 000001D2 R				cmp leaveCount, 1
	   01
 00000225  0F 8F 0000024A				jg L4
 0000022B  E8 00000000 E				call crlf

 00000230  BA 000000E2 R				mov edx, offset nameEnter
 00000235  E8 00000000 E				call writestring

 0000023A  BA 000001F3 R				mov edx, offset nameOfEmployee
 0000023F  B9 0000000F					mov ecx, sizeof nameOfEmployee
 00000244  E8 00000000 E				call readstring	
 00000249  E8 00000000 E				call crlf

 0000024E  BA 000002A5 R				mov edx, offset equals
 00000253  E8 00000000 E				call writestring
 00000258  E8 00000000 E				call crlf

 0000025D  BA 000000F4 R				mov edx, offset dayEnter
 00000262  E8 00000000 E				call writestring

 00000267  83 3D 000001D3 R				cmp counter, 1
	   01
 0000026E  74 24					je days_1
 00000270  83 3D 000001D3 R				cmp counter, 2
	   02
 00000277  74 2C					je days_2
 00000279  83 3D 000001D3 R				cmp counter, 3
	   03
 00000280  74 34					je days_3
 00000282  83 3D 000001D3 R				cmp counter, 4
	   04
 00000289  74 3C					je days_4
 0000028B  83 3D 000001D3 R				cmp counter, 5
	   05
 00000292  74 44					je days_5

 00000294						days_1: 
 00000294  E8 00000000 E					call readint
 00000299  A3 000001DF R					mov day1, eax
 0000029E  E8 00000000 E					call crlf
 000002A3  EB 44						jmp hour
 000002A5						days_2:
 000002A5  E8 00000000 E					call readint
 000002AA  A3 000001E3 R					mov day2, eax
 000002AF  E8 00000000 E					call crlf
 000002B4  EB 33						jmp hour

 000002B6						days_3:
 000002B6  E8 00000000 E					call readint
 000002BB  A3 000001E7 R					mov day3, eax
 000002C0  E8 00000000 E					call crlf
 000002C5  EB 22						jmp hour

 000002C7						days_4:
 000002C7  E8 00000000 E					call readint
 000002CC  A3 000001EB R					mov day4, eax
 000002D1  E8 00000000 E					call crlf
 000002D6  EB 11						jmp hour

 000002D8						days_5:
 000002D8  E8 00000000 E					call readint
 000002DD  A3 000001EF R					mov day5, eax
 000002E2  E8 00000000 E					call crlf
 000002E7  EB 00						jmp hour
								

 000002E9					hour:

 000002E9  83 3D 000001D3 R				cmp counter, 1
	   01
 000002F0  74 24					je mon
 000002F2  83 3D 000001D3 R				cmp counter, 2
	   02
 000002F9  74 2D					je tues
 000002FB  83 3D 000001D3 R				cmp counter, 3
	   03
 00000302  74 36					je wed
 00000304  83 3D 000001D3 R				cmp counter, 4
	   04
 0000030B  74 3F					je thurs
 0000030D  83 3D 000001D3 R				cmp counter, 5
	   05
 00000314  74 48					je fri
							
 00000316						mon: 
 00000316  C7 05 00000202 R					mov hoursEmployeeWorkedOnDay1, 8
	   00000008
 00000320  FF 05 000001D3 R					inc counter
 00000326  EB 48						jmp leaveConfirm

 00000328						tues:
 00000328  C7 05 00000206 R					mov hoursEmployeeWorkedOnDay2, 8
	   00000008
 00000332  FF 05 000001D3 R					inc counter
 00000338  EB 36						jmp leaveConfirm

 0000033A						wed:

 0000033A  C7 05 0000020A R					mov hoursEmployeeWorkedOnDay3, 8
	   00000008
 00000344  FF 05 000001D3 R					inc counter
 0000034A  EB 24						jmp leaveConfirm

 0000034C						thurs:

 0000034C  C7 05 0000020E R					mov hoursEmployeeWorkedOnDay4, 8
	   00000008
 00000356  FF 05 000001D3 R					inc counter
 0000035C  EB 12						jmp leaveConfirm

 0000035E						fri:
								
 0000035E  C7 05 00000212 R					mov hoursEmployeeWorkedOnDay5, 8
	   00000008
 00000368  FF 05 000001D3 R					inc counter
 0000036E  EB 00						jmp leaveConfirm

 00000370					leaveConfirm:

 00000370  BA 00000171 R				mov edx, offset confirmedLeave
 00000375  E8 00000000 E				call writestring
 0000037A  E8 00000000 E				call crlf
 0000037F  E8 00000000 E				call crlf

 00000384  E9 FFFFFCAE					jmp start

 00000389					L3:
 00000389  E8 00000000 E				call crlf
 0000038E  BA 00000216 R				mov edx, offset space
 00000393  E8 00000000 E				call writestring
 00000398  BA 000001A2 R				mov edx, offset nameHeading
 0000039D  E8 00000000 E				call writestring
 000003A2  BA 000001AF R				mov edx, offset dayHeading
 000003A7  E8 00000000 E				call writestring
 000003AC  BA 000001BB R				mov edx, offset hourHeading
 000003B1  E8 00000000 E				call writestring
 000003B6  E8 00000000 E				call crlf

							INVOKE print, day1, hoursEmployeeWorkedOnDay1
 000003BB  FF 35 00000202 R *	    push   hoursEmployeeWorkedOnDay1
 000003C1  FF 35 000001DF R *	    push   day1
 000003C7  E8 000000E5	   *	    call   print
 000003CC  E8 00000000 E				call crlf
							INVOKE print, day2, hoursEmployeeWorkedOnDay2
 000003D1  FF 35 00000206 R *	    push   hoursEmployeeWorkedOnDay2
 000003D7  FF 35 000001E3 R *	    push   day2
 000003DD  E8 000000CF	   *	    call   print
 000003E2  E8 00000000 E				call crlf
							INVOKE print, day3, hoursEmployeeWorkedOnDay3
 000003E7  FF 35 0000020A R *	    push   hoursEmployeeWorkedOnDay3
 000003ED  FF 35 000001E7 R *	    push   day3
 000003F3  E8 000000B9	   *	    call   print
 000003F8  E8 00000000 E				call crlf
							INVOKE print, day4, hoursEmployeeWorkedOnDay4
 000003FD  FF 35 0000020E R *	    push   hoursEmployeeWorkedOnDay4
 00000403  FF 35 000001EB R *	    push   day4
 00000409  E8 000000A3	   *	    call   print
 0000040E  E8 00000000 E				call crlf
							INVOKE print, day5, hoursEmployeeWorkedOnDay5
 00000413  FF 35 00000212 R *	    push   hoursEmployeeWorkedOnDay5
 00000419  FF 35 000001EF R *	    push   day5
 0000041F  E8 0000008D	   *	    call   print
 00000424  E8 00000000 E				call crlf


 00000429  E8 00000000 E				call crlf
 0000042E  E8 00000000 E				call crlf
 00000433  BA 00000284 R				mov edx, offset hoursPrompt	
 00000438  E8 00000000 E				call writeString
 0000043D  E8 FFFFFBBE					call calSum					;calculating sum of hours
 00000442  E8 00000000 E				call writeint
 00000447  E8 00000000 E				call crlf
 0000044C  E8 00000000 E				call crlf

 00000451  BA 00000299 R				mov edx, offset totalPayPrompt
 00000456  E8 00000000 E				call writestring
 0000045B  F7 25 000001CA R				mul salaryPerHour			;calculating total salary
 00000461  E8 00000000 E				call writeint
 00000466  E8 00000000 E				call crlf
 0000046B  E8 00000000 E				call crlf

 00000470  E9 FFFFFBC2					jmp start

 00000475					L4:
 00000475  E8 00000000 E				call crlf
 0000047A  BA 0000018C R				mov edx, offset deniedLeave
 0000047F  E8 00000000 E				call writestring
 00000484  E8 00000000 E				call crlf
 00000489  E8 00000000 E				call crlf

 0000048E  E9 FFFFFBA4			        jmp start

 00000493				err:
 00000493  E8 00000000 E		    call crlf
 00000498  BA 0000021F R		    mov edx, offset error
 0000049D  E8 00000000 E			call writestring

 000004A2  E8 00000000 E			call crlf
 000004A7  E8 00000000 E			call crlf

 000004AC  E9 FFFFFB86				jmp start

 000004B1				_exit:

 000004B1			main endp

 000004B1			print proc uses edx, day: dword, hourWorked: dword
					
 000004B1  55		   *	    push   ebp
 000004B2  8B EC	   *	    mov    ebp, esp
 000004B4  52		   *	    push   edx
 000004B5  BA 00000216 R		mov edx, offset space
 000004BA  E8 00000000 E		call writestring

 000004BF  BA 000001F3 R		mov edx, offset nameOfEmployee
 000004C4  E8 00000000 E		call writestring

 000004C9  BA 00000216 R		mov edx, offset space
 000004CE  E8 00000000 E		call writestring

 000004D3  8B 45 08			mov eax, day
 000004D6  E8 00000000 E		call writeint

 000004DB  BA 00000216 R		mov edx, offset space
 000004E0  E8 00000000 E		call writestring

 000004E5  8B 45 0C			mov eax,  hourWorked
 000004E8  E8 00000000 E		call writeint

					ret
 000004ED  5A		   *	    pop    edx
 000004EE  C9		   *	    leave  
 000004EF  C2 0008	   *	    ret    00008h

 000004F2			print endp
				end main
Microsoft (R) Macro Assembler Version 14.23.28106.4	    12/17/19 09:56:50
project.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000037B Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000004F2 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
calSum . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000001E Public STDCALL
main . . . . . . . . . . . . . .	P Near	 0000001E _TEXT	Length= 00000493 Public STDCALL
  start  . . . . . . . . . . . .	L Near	 00000037 _TEXT	
  L1 . . . . . . . . . . . . . .	L Near	 0000007F _TEXT	
  day_1  . . . . . . . . . . . .	L Near	 000000ED _TEXT	
  day_2  . . . . . . . . . . . .	L Near	 000000FE _TEXT	
  day_3  . . . . . . . . . . . .	L Near	 0000010F _TEXT	
  day_4  . . . . . . . . . . . .	L Near	 00000120 _TEXT	
  day_5  . . . . . . . . . . . .	L Near	 00000131 _TEXT	
  hours  . . . . . . . . . . . .	L Near	 00000142 _TEXT	
  monday . . . . . . . . . . . .	L Near	 00000179 _TEXT	
  tuesday  . . . . . . . . . . .	L Near	 00000193 _TEXT	
  wednesday  . . . . . . . . . .	L Near	 000001AD _TEXT	
  thursday . . . . . . . . . . .	L Near	 000001C7 _TEXT	
  friday . . . . . . . . . . . .	L Near	 000001E1 _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 000001FB _TEXT	
  days_1 . . . . . . . . . . . .	L Near	 00000294 _TEXT	
  days_2 . . . . . . . . . . . .	L Near	 000002A5 _TEXT	
  days_3 . . . . . . . . . . . .	L Near	 000002B6 _TEXT	
  days_4 . . . . . . . . . . . .	L Near	 000002C7 _TEXT	
  days_5 . . . . . . . . . . . .	L Near	 000002D8 _TEXT	
  hour . . . . . . . . . . . . .	L Near	 000002E9 _TEXT	
  mon  . . . . . . . . . . . . .	L Near	 00000316 _TEXT	
  tues . . . . . . . . . . . . .	L Near	 00000328 _TEXT	
  wed  . . . . . . . . . . . . .	L Near	 0000033A _TEXT	
  thurs  . . . . . . . . . . . .	L Near	 0000034C _TEXT	
  fri  . . . . . . . . . . . . .	L Near	 0000035E _TEXT	
  leaveConfirm . . . . . . . . .	L Near	 00000370 _TEXT	
  L3 . . . . . . . . . . . . . .	L Near	 00000389 _TEXT	
  L4 . . . . . . . . . . . . . .	L Near	 00000475 _TEXT	
  err  . . . . . . . . . . . . .	L Near	 00000493 _TEXT	
  _exit  . . . . . . . . . . . .	L Near	 000004B1 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
print  . . . . . . . . . . . . .	P Near	 000004B1 _TEXT	Length= 00000041 Public STDCALL
  day  . . . . . . . . . . . . .	DWord	 bp + 00000008
  hourWorked . . . . . . . . . .	DWord	 bp + 0000000C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
check  . . . . . . . . . . . . .	Byte	 0000036B _DATA	
confirmedLeave . . . . . . . . .	Byte	 00000171 _DATA	
counter  . . . . . . . . . . . .	DWord	 000001D3 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
day1 . . . . . . . . . . . . . .	DWord	 000001DF _DATA	
day2 . . . . . . . . . . . . . .	DWord	 000001E3 _DATA	
day3 . . . . . . . . . . . . . .	DWord	 000001E7 _DATA	
day4 . . . . . . . . . . . . . .	DWord	 000001EB _DATA	
day5 . . . . . . . . . . . . . .	DWord	 000001EF _DATA	
dayEnter . . . . . . . . . . . .	Byte	 000000F4 _DATA	
dayHeading . . . . . . . . . . .	Byte	 000001AF _DATA	
deniedLeave  . . . . . . . . . .	Byte	 0000018C _DATA	
equals . . . . . . . . . . . . .	Byte	 000002A5 _DATA	
error  . . . . . . . . . . . . .	Byte	 0000021F _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
hourHeading  . . . . . . . . . .	Byte	 000001BB _DATA	
hoursEmployeeWorkedOnDay1  . . .	DWord	 00000202 _DATA	
hoursEmployeeWorkedOnDay2  . . .	DWord	 00000206 _DATA	
hoursEmployeeWorkedOnDay3  . . .	DWord	 0000020A _DATA	
hoursEmployeeWorkedOnDay4  . . .	DWord	 0000020E _DATA	
hoursEmployeeWorkedOnDay5  . . .	DWord	 00000212 _DATA	
hoursEnter . . . . . . . . . . .	Byte	 00000104 _DATA	
hoursPrompt  . . . . . . . . . .	Byte	 00000284 _DATA	
leaveConfirmation  . . . . . . .	Byte	 0000012D _DATA	
leaveCount . . . . . . . . . . .	Byte	 000001D2 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
menu . . . . . . . . . . . . . .	Byte	 00000050 _DATA	
nameEnter  . . . . . . . . . . .	Byte	 000000E2 _DATA	
nameHeading  . . . . . . . . . .	Byte	 000001A2 _DATA	
nameOfEmployee . . . . . . . . .	Byte	 000001F3 _DATA	
printCounter . . . . . . . . . .	DWord	 000001D7 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
salaryPerHour  . . . . . . . . .	DWord	 000001CA _DATA	
selection  . . . . . . . . . . .	Byte	 000000BD _DATA	
space  . . . . . . . . . . . . .	Byte	 00000216 _DATA	
titleOfProject . . . . . . . . .	Byte	 00000000 _DATA	
totalHoursPerWeek  . . . . . . .	DWord	 000001CE _DATA	
totalPayPrompt . . . . . . . . .	Byte	 00000299 _DATA	
totalPay . . . . . . . . . . . .	DWord	 000001DB _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
