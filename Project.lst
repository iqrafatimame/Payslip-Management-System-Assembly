Microsoft (R) Macro Assembler Version 14.23.28106.4	    12/17/19 13:15:47
project.asm						     Page 1 - 1


				;Project Title: PAY SLIP MANAGEMENT SYSTEM
				;Author: MUHAMMAD SAAD
				;Registration Number: 2018-CS-7
				;Author: Daniyal Iqbal
				;Registration Number: 2018-CS-20


				Include Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data

 00000000 09 09 09 2A 2A	titleOfProject BYTE "			************************ PAY SLIP MANAGEMENT SYSTEM ************************", 0
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 20 50 41
	   59 20 53 4C 49
	   50 20 4D 41 4E
	   41 47 45 4D 45
	   4E 54 20 53 59
	   53 54 45 4D 20
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 00
 00000050 53 65 6C 65 63	menu BYTE "Select from the following menu.", 0dh, 0ah			; menu template
	   74 20 66 72 6F
	   6D 20 74 68 65
	   20 66 6F 6C 6C
	   6F 77 69 6E 67
	   20 6D 65 6E 75
	   2E 0D 0A
 00000071  20 0D 0A			 BYTE " ",  0dh, 0ah
 00000074  31 2E 20 45 6E	     BYTE "1. Enter Today's Data", 0dh, 0ah
	   74 65 72 20 54
	   6F 64 61 79 27
	   73 20 44 61 74
	   61 0D 0A
 0000008B  32 2E 20 41 70	     BYTE "2. Apply for leave", 0dh, 0ah
	   70 6C 79 20 66
	   6F 72 20 6C 65
	   61 76 65 0D 0A
 0000009F  33 2E 20 53 68	     BYTE "3. Show the Report", 0dh, 0ah
	   6F 77 20 74 68
	   65 20 52 65 70
	   6F 72 74 0D 0A
 000000B3  34 2E 20 47 65		 BYTE "4. Generate Pay Slip", 0dh, 0ah
	   6E 65 72 61 74
	   65 20 50 61 79
	   20 53 6C 69 70
	   0D 0A
 000000C9  35 2E 20 45 78	     BYTE "5. Exit", 0dh, 0ah, 0
	   69 74 0D 0A 00

 000000D3 45 6E 74 65 72	selection BYTE "Enter the number of your selection: ", 0		;input prompt
	   20 74 68 65 20
	   6E 75 6D 62 65
	   72 20 6F 66 20
	   79 6F 75 72 20
	   73 65 6C 65 63
	   74 69 6F 6E 3A
	   20 00

 000000F8 45 6E 74 65 72	nameEnter BYTE "Enter your name: ", 0							;input prompt
	   20 79 6F 75 72
	   20 6E 61 6D 65
	   3A 20 00
 0000010A 45 6E 74 65 72	dayEnter BYTE "Enter the day: ", 0								;input prompt
	   20 74 68 65 20
	   64 61 79 3A 20
	   00
 0000011A 45 6E 74 65 72	hoursEnter BYTE "Enter number of hours you worked today: ", 0	;input prompt
	   20 6E 75 6D 62
	   65 72 20 6F 66
	   20 68 6F 75 72
	   73 20 79 6F 75
	   20 77 6F 72 6B
	   65 64 20 74 6F
	   64 61 79 3A 20
	   00

 00000143 45 6E 74 65 72	leaveConfirmation BYTE "Enter 1 if you want to apply for leave and 0 to exit to main menu: ", 0		;leave confirmation prompt
	   20 31 20 69 66
	   20 79 6F 75 20
	   77 61 6E 74 20
	   74 6F 20 61 70
	   70 6C 79 20 66
	   6F 72 20 6C 65
	   61 76 65 20 61
	   6E 64 20 30 20
	   74 6F 20 65 78
	   69 74 20 74 6F
	   20 6D 61 69 6E
	   20 6D 65 6E 75
	   3A 20 00
 00000187 59 6F 75 72 20	confirmedLeave BYTE "Your leave has been added.", 0				;leave confirmed prompt
	   6C 65 61 76 65
	   20 68 61 73 20
	   62 65 65 6E 20
	   61 64 64 65 64
	   2E 00
 000001A2 4C 65 61 76 65	deniedLeave BYTE "Leave is not allowed.", 0						;leave denied prompt
	   20 69 73 20 6E
	   6F 74 20 61 6C
	   6C 6F 77 65 64
	   2E 00

 000001B8 20 20 2D 2D 2D	playSlip BYTE "  ----------------------- PAY SLIP -----------------------", 0
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   20 50 41 59 20
	   53 4C 49 50 20
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 00
 000001F3 20 20 2D 2D 2D	ending BYTE "  -------------------------------------------------------", 0
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 00
 0000022D 20 20 4E 61 6D	paySlipName BYTE "  Name of the employee: ", 0					;name of employeee
	   65 20 6F 66 20
	   74 68 65 20 65
	   6D 70 6C 6F 79
	   65 65 3A 20 00
 00000246 20 20 54 6F 74	paySlipHours BYTE "  Total number of hours employee worked: ", 0	;employee work hours
	   61 6C 20 6E 75
	   6D 62 65 72 20
	   6F 66 20 68 6F
	   75 72 73 20 65
	   6D 70 6C 6F 79
	   65 65 20 77 6F
	   72 6B 65 64 3A
	   20 00
 00000270 20 20 54 6F 74	paySlipSalary BYTE "  Total pay of employee: $", 0				;employee pay
	   61 6C 20 70 61
	   79 20 6F 66 20
	   65 6D 70 6C 6F
	   79 65 65 3A 20
	   24 00

 0000028B 4E 61 6D 65 20	nameHeading BYTE "Name        ", 0								;heading
	   20 20 20 20 20
	   20 20 00
 00000298 44 61 79 20 20	dayHeading BYTE "Day        ", 0								;heading
	   20 20 20 20 20
	   20 00
 000002A4 48 6F 75 72 73	hourHeading BYTE "Hours Worked		", 0						;heading
	   20 57 6F 72 6B
	   65 64 09 09 00

 000002B3 0000001E		salaryPerHour DWORD 30											;salary per hour									
 000002B7 00			leaveCount BYTE 0												;Total leaves
 000002B8 00000001		counter DWORD 1													;counter to keep track of days while inputing
 000002BC 00000000		printCounter DWORD 0											;counter to keep track of days during printing on console
 000002C0 00000000		totalPay DWORD 0
 000002C4 00000000		totalHours DWORD 0

 000002C8 00000000		day1 DWORD ?
 000002CC 00000000		day2 DWORD ?
 000002D0 00000000		day3 DWORD ?
 000002D4 00000000		day4 DWORD ?
 000002D8 00000000		day5 DWORD ?
 000002DC  0000000F [		nameOfEmployee BYTE 15 DUP (?)									;to store the name of employee
	    00
	   ]
 000002EB 00000000		hoursEmployeeWorkedOnDay1 DWORD ?
 000002EF 00000000		hoursEmployeeWorkedOnDay2 DWORD ?
 000002F3 00000000		hoursEmployeeWorkedOnDay3 DWORD ?
 000002F7 00000000		hoursEmployeeWorkedOnDay4 DWORD ?
 000002FB 00000000		hoursEmployeeWorkedOnDay5 DWORD ?
 000002FF 20 20 20 20 20	space BYTE "        ", 0
	   20 20 20 00
 00000308 20 2D 2D 2D 2D	error BYTE " ------------------------------ ", 0dh, 0ah			;error prompt
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 20 0D 0A
 0000032A  7C 45 72 72 6F	      BYTE "|Error: This is invalid option.|", 0dh, 0ah
	   72 3A 20 54 68
	   69 73 20 69 73
	   20 69 6E 76 61
	   6C 69 64 20 6F
	   70 74 69 6F 6E
	   2E 7C 0D 0A
 0000034C  20 2D 2D 2D 2D	      BYTE " ------------------------------ ", 0
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 20 00

 0000036D 54 6F 74 61 6C	hoursPrompt BYTE "Total Hours Worked: ", 0						;total hours prompt to display on screen
	   20 48 6F 75 72
	   73 20 57 6F 72
	   6B 65 64 3A 20
	   00
 00000382 54 6F 74 61 6C	totalPayPrompt BYTE "Total Pay: ", 0							;total pay prompt to display on screen
	   20 50 61 79 3A
	   20 00
 0000038E 20 20 2D 2D 2D	equals BYTE "  ----------------------------- ", 0dh, 0ah		;table to show number with corresponding day
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 20 0D 0A
 000003B0  20 7C 20 45 6E	      BYTE " | Enter 1: For Monday          |", 0dh, 0ah
	   74 65 72 20 31
	   3A 20 46 6F 72
	   20 4D 6F 6E 64
	   61 79 20 20 20
	   20 20 20 20 20
	   20 20 7C 0D 0A
 000003D3  20 7C 20 45 6E	      BYTE " | Enter 2: For Tuesday         |", 0dh, 0ah
	   74 65 72 20 32
	   3A 20 46 6F 72
	   20 54 75 65 73
	   64 61 79 20 20
	   20 20 20 20 20
	   20 20 7C 0D 0A
 000003F6  20 7C 20 45 6E	      BYTE " | Enter 3: For Wednesday       |", 0dh, 0ah
	   74 65 72 20 33
	   3A 20 46 6F 72
	   20 57 65 64 6E
	   65 73 64 61 79
	   20 20 20 20 20
	   20 20 7C 0D 0A
 00000419  20 7C 20 45 6E	      BYTE " | Enter 4: For Thursday        |", 0dh, 0ah
	   74 65 72 20 34
	   3A 20 46 6F 72
	   20 54 68 75 72
	   73 64 61 79 20
	   20 20 20 20 20
	   20 20 7C 0D 0A
 0000043C  20 7C 20 45 6E	      BYTE " | Enter 5: For Friday          |", 0dh, 0ah
	   74 65 72 20 35
	   3A 20 46 6F 72
	   20 46 72 69 64
	   61 79 20 20 20
	   20 20 20 20 20
	   20 20 7C 0D 0A
 0000045F  20 20 2D 2D 2D	      BYTE "  ------------------------------ ", 0
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 20 00

 00000481 6E 61 6D 65 2E	fileToStoreName BYTE "name.txt", 0
	   74 78 74 00
 0000048A 68 6F 75 72 73	fileToStoreHours BYTE "hours.txt", 0
	   2E 74 78 74 00
 00000494 70 61 79 2E 74	fileToStorePay BYTE "pay.txt", 0
	   78 74 00
 0000049C 00000000		filehandle DWORD ?
 000004A0 00000000		bytesWritten DWORD ?


 00000000			.code

 00000000			calSum proc														;procedure to calculate total hours worked in a week

 00000000  A1 000002EB R		mov eax, hoursEmployeeWorkedOnDay1
 00000005  03 05 000002EF R		add eax, hoursEmployeeWorkedOnDay2
 0000000B  03 05 000002F3 R		add eax, hoursEmployeeWorkedOnDay3
 00000011  03 05 000002F7 R		add eax, hoursEmployeeWorkedOnDay4
 00000017  03 05 000002FB R		add eax, hoursEmployeeWorkedOnDay5

 0000001D  C3				ret

 0000001E			calSum endp

				print proto, day: dword, hourWorked: dword						;function to print data

 0000001E			main proc
						
					INVOKE CreateFile,
						ADDR fileToStoreName, ; ptr to filename
						GENERIC_READ, ; mode = Can read
						DO_NOT_SHARE, ; share mode
						NULL, ; ptr to security attributes
						OPEN_EXISTING, ; open an existing file
						FILE_ATTRIBUTE_NORMAL, ; normal file attribute
						0 ; not used
 0000001E  6A 00	   *	    push   +000000000h
 00000020  68 00000080	   *	    push   +000000080h
 00000025  6A 03	   *	    push   +000000003h
 00000027  6A 00	   *	    push   +000000000h
 00000029  6A 00	   *	    push   +000000000h
 0000002B  68 80000000	   *	    push   +080000000h
 00000030  68 00000481 R   *	    push   OFFSET fileToStoreName
 00000035  E8 00000000 E   *	    call   CreateFileA

 0000003A  83 F8 FF				cmp eax, INVALID_HANDLE_VALUE
 0000003D  0F 84 000005A6			je errr
 00000043  A3 0000049C R			mov filehandle, eax ; Copy handle to variable

 00000048  BA 000002DC R			mov edx, offset nameOfEmployee
 0000004D  B9 0000000F		mov ecx, sizeof nameOfEmployee
 00000052  E8 00000000 E			call readFromFile


						invoke CloseHandle, filehandle
 00000057  FF 35 0000049C R *	    push   filehandle
 0000005D  E8 00000000 E   *	    call   CloseHandle


 00000062  E8 00000000 E	     call crlf
 00000067  BA 00000000 R		 mov edx, offset titleOfProject								;moving address of title of project into edx to print it
 0000006C  E8 00000000 E		 call writestring
 00000071  E8 00000000 E		 call crlf
 00000076  E8 00000000 E		 call crlf

 0000007B				 start:
						
 0000007B  BA 00000050 R			   mov edx, offset menu			
 00000080  E8 00000000 E			   call writestring										;printing the menu on console
 00000085  E8 00000000 E			   call crlf
 0000008A  E8 00000000 E			   call crlf

 0000008F  BA 000000D3 R			   mov edx, offset selection						
 00000094  E8 00000000 E			   call writestring										;printing the selection prompt on console

 00000099  E8 00000000 E			   call readint

 0000009E  83 F8 01				cmp eax, 1												;comparing selection result for jumping at particular label
 000000A1  74 29				je L1
 000000A3  83 F8 02				cmp eax, 2												;comparing selection result for jumping at particular label
 000000A6  0F 84 000001A1			je L2
 000000AC  83 F8 03				cmp eax, 3												;comparing selection result for jumping at particular label			
 000000AF  0F 84 00000326			je L3
 000000B5  83 F8 04				cmp eax, 4
 000000B8  0F 84 0000044F			je generatePaySlip
 000000BE  83 F8 05				cmp eax, 5												;comparing selection result for jumping at particular label
 000000C1  0F 84 000004D8			je _exit												;jumping to end of program if option 4 is selected

 000000C7  E9 00000423				jmp err													;handling exception



 000000CC					L1:
 000000CC  E8 00000000 E			   call crlf
 000000D1  E8 00000000 E			   call crlf

 000000D6  BA 000000F8 R				mov edx, offset nameEnter							
 000000DB  E8 00000000 E				call writestring									;displaying prompt of asking user for his/her name

 000000E0  BA 000002DC R				mov edx, offset nameOfEmployee
 000000E5  B9 0000000F					mov ecx, sizeof nameOfEmployee
 000000EA  E8 00000000 E				call readstring										;taking name as a input from the user
 000000EF  E8 00000000 E				call crlf

 000000F4  BA 0000038E R				mov edx, offset equals
 000000F9  E8 00000000 E				call writestring									;displaying number day corresponding table
 000000FE  E8 00000000 E				call crlf
 00000103  E8 00000000 E				call crlf

 00000108  BA 0000010A R				mov edx, offset dayEnter
 0000010D  E8 00000000 E				call writestring									;displaying prompt of asking user for the day

 00000112  83 3D 000002B8 R				cmp counter, 1										;comparing entered day result for jumping at particular label
	   01
 00000119  74 24					je day_1
 0000011B  83 3D 000002B8 R				cmp counter, 2										;comparing entered day result for jumping at particular label
	   02
 00000122  74 2C					je day_2
 00000124  83 3D 000002B8 R				cmp counter, 3										;comparing entered day result for jumping at particular label
	   03
 0000012B  74 34					je day_3
 0000012D  83 3D 000002B8 R				cmp counter, 4										;comparing entered day result for jumping at particular label
	   04
 00000134  74 3C					je day_4
 00000136  83 3D 000002B8 R				cmp counter, 5										;comparing entered day result for jumping at particular label
	   05
 0000013D  74 44					je day_5

 0000013F						day_1: 
 0000013F  E8 00000000 E					call readint									
 00000144  A3 000002C8 R					mov day1, eax									;storing received value in a variable
 00000149  E8 00000000 E					call crlf
 0000014E  EB 44						jmp hours
 00000150						day_2:
 00000150  E8 00000000 E					call readint
 00000155  A3 000002CC R					mov day2, eax									;storing received value in a variable
 0000015A  E8 00000000 E					call crlf
 0000015F  EB 33						jmp hours

 00000161						day_3:
 00000161  E8 00000000 E					call readint
 00000166  A3 000002D0 R					mov day3, eax									;storing received value in a variable
 0000016B  E8 00000000 E					call crlf
 00000170  EB 22						jmp hours

 00000172						day_4:
 00000172  E8 00000000 E					call readint
 00000177  A3 000002D4 R					mov day4, eax									;storing received value in a variable
 0000017C  E8 00000000 E					call crlf
 00000181  EB 11						jmp hours

 00000183						day_5:
 00000183  E8 00000000 E					call readint
 00000188  A3 000002D8 R					mov day5, eax									;storing received value in a variable
 0000018D  E8 00000000 E					call crlf
 00000192  EB 00						jmp hours
								

 00000194					hours:
 00000194  BA 0000011A R				mov edx, offset hoursEnter					
 00000199  E8 00000000 E				call writestring	

 0000019E  83 3D 000002B8 R				cmp counter, 1										;comparing counter for jumping at particular label
	   01
 000001A5  74 24					je monday
 000001A7  83 3D 000002B8 R				cmp counter, 2										;comparing counter for jumping at particular label
	   02
 000001AE  74 35					je tuesday
 000001B0  83 3D 000002B8 R				cmp counter, 3										;comparing counter for jumping at particular label
	   03
 000001B7  74 46					je wednesday
 000001B9  83 3D 000002B8 R				cmp counter, 4										;comparing counter for jumping at particular label
	   04
 000001C0  74 57					je thursday
 000001C2  83 3D 000002B8 R				cmp counter, 5										;comparing counter for jumping at particular label
	   05
 000001C9  74 68					je friday
							
 000001CB						monday: 
 000001CB  E8 00000000 E					call readint
 000001D0  A3 000002EB R					mov hoursEmployeeWorkedOnDay1, eax				;storing received value in a variable
 000001D5  E8 00000000 E					call crlf
 000001DA  FF 05 000002B8 R					inc counter
 000001E0  E9 FFFFFE96						jmp start


 000001E5						tuesday:
 000001E5  E8 00000000 E					call readint
 000001EA  A3 000002EF R					mov hoursEmployeeWorkedOnDay2, eax				;storing received value in a variable
 000001EF  E8 00000000 E					call crlf
 000001F4  FF 05 000002B8 R					inc counter
 000001FA  E9 FFFFFE7C						jmp start

 000001FF						wednesday:

 000001FF  E8 00000000 E					call readint
 00000204  A3 000002F3 R					mov hoursEmployeeWorkedOnDay3, eax				;storing received value in a variable
 00000209  E8 00000000 E					call crlf
 0000020E  FF 05 000002B8 R					inc counter
 00000214  E9 FFFFFE62						jmp start

 00000219						thursday:

 00000219  E8 00000000 E					call readint
 0000021E  A3 000002F7 R					mov hoursEmployeeWorkedOnDay4, eax				;storing received value in a variable
 00000223  E8 00000000 E					call crlf
 00000228  FF 05 000002B8 R					inc counter
 0000022E  E9 FFFFFE48						jmp start

 00000233						friday:
								
 00000233  E8 00000000 E					call readint
 00000238  A3 000002FB R					mov hoursEmployeeWorkedOnDay5, eax				;storing received value in a variable
 0000023D  E8 00000000 E					call crlf	
 00000242  FF 05 000002B8 R					inc counter
 00000248  E9 FFFFFE2E						jmp start

 0000024D					L2:
 0000024D  E8 00000000 E				call crlf
 00000252  BA 00000143 R				mov edx, offset leaveConfirmation
 00000257  E8 00000000 E				call writestring									;displaying prompt which will ask user to confirm leave
 0000025C  E8 00000000 E				call readint
							
 00000261  83 F8 00					cmp eax, 0											;comparing entered value for jumping at particular label
 00000264  0F 84 FFFFFE11				je start

 0000026A  FE 05 000002B7 R				inc leaveCount
 00000270  80 3D 000002B7 R				cmp leaveCount, 1
	   01
 00000277  0F 8F 00000254				jg L4
 0000027D  E8 00000000 E				call crlf

 00000282  BA 000000F8 R				mov edx, offset nameEnter
 00000287  E8 00000000 E				call writestring									;displaying prompt of asking user for his/her name

 0000028C  BA 000002DC R				mov edx, offset nameOfEmployee
 00000291  B9 0000000F					mov ecx, sizeof nameOfEmployee
 00000296  E8 00000000 E				call readstring										;taking name as a input from the user
 0000029B  E8 00000000 E				call crlf

 000002A0  BA 0000038E R				mov edx, offset equals
 000002A5  E8 00000000 E				call writestring									;displaying number day corresponding table
 000002AA  E8 00000000 E				call crlf

 000002AF  BA 0000010A R				mov edx, offset dayEnter
 000002B4  E8 00000000 E				call writestring									;displaying prompt of asking user for the day

 000002B9  83 3D 000002B8 R				cmp counter, 1										;comparing entered day result for jumping at particular label
	   01
 000002C0  74 24					je days_1
 000002C2  83 3D 000002B8 R				cmp counter, 2										;comparing entered day result for jumping at particular label
	   02
 000002C9  74 2C					je days_2
 000002CB  83 3D 000002B8 R				cmp counter, 3										;comparing entered day result for jumping at particular label
	   03
 000002D2  74 34					je days_3
 000002D4  83 3D 000002B8 R				cmp counter, 4										;comparing entered day result for jumping at particular label
	   04
 000002DB  74 3C					je days_4
 000002DD  83 3D 000002B8 R				cmp counter, 5										;comparing entered day result for jumping at particular label
	   05
 000002E4  74 44					je days_5

 000002E6						days_1: 
 000002E6  E8 00000000 E					call readint
 000002EB  A3 000002C8 R					mov day1, eax									;storing received value in a variable
 000002F0  E8 00000000 E					call crlf
 000002F5  EB 44						jmp hour
 000002F7						days_2:
 000002F7  E8 00000000 E					call readint
 000002FC  A3 000002CC R					mov day2, eax									;storing received value in a variable
 00000301  E8 00000000 E					call crlf
 00000306  EB 33						jmp hour

 00000308						days_3:
 00000308  E8 00000000 E					call readint
 0000030D  A3 000002D0 R					mov day3, eax									;storing received value in a variable
 00000312  E8 00000000 E					call crlf
 00000317  EB 22						jmp hour

 00000319						days_4:
 00000319  E8 00000000 E					call readint
 0000031E  A3 000002D4 R					mov day4, eax									;storing received value in a variable
 00000323  E8 00000000 E					call crlf
 00000328  EB 11						jmp hour

 0000032A						days_5:
 0000032A  E8 00000000 E					call readint
 0000032F  A3 000002D8 R					mov day5, eax									;storing received value in a variable
 00000334  E8 00000000 E					call crlf
 00000339  EB 00						jmp hour
								

 0000033B					hour:

 0000033B  83 3D 000002B8 R				cmp counter, 1										;comparing counter for jumping at particular label
	   01
 00000342  74 24					je mon
 00000344  83 3D 000002B8 R				cmp counter, 2										;comparing counter for jumping at particular label
	   02
 0000034B  74 2D					je tues
 0000034D  83 3D 000002B8 R				cmp counter, 3										;comparing counter for jumping at particular label
	   03
 00000354  74 36					je wed
 00000356  83 3D 000002B8 R				cmp counter, 4										;comparing counter for jumping at particular label
	   04
 0000035D  74 3F					je thurs
 0000035F  83 3D 000002B8 R				cmp counter, 5										;comparing counter for jumping at particular label
	   05
 00000366  74 48					je fri
							
 00000368						mon: 
 00000368  C7 05 000002EB R					mov hoursEmployeeWorkedOnDay1, 8				;storing received value in a variable
	   00000008
 00000372  FF 05 000002B8 R					inc counter
 00000378  EB 48						jmp leaveConfirm

 0000037A						tues:
 0000037A  C7 05 000002EF R					mov hoursEmployeeWorkedOnDay2, 8				;storing received value in a variable
	   00000008
 00000384  FF 05 000002B8 R					inc counter
 0000038A  EB 36						jmp leaveConfirm

 0000038C						wed:

 0000038C  C7 05 000002F3 R					mov hoursEmployeeWorkedOnDay3, 8				;storing received value in a variable
	   00000008
 00000396  FF 05 000002B8 R					inc counter
 0000039C  EB 24						jmp leaveConfirm

 0000039E						thurs:

 0000039E  C7 05 000002F7 R					mov hoursEmployeeWorkedOnDay4, 8				;storing received value in a variable
	   00000008
 000003A8  FF 05 000002B8 R					inc counter
 000003AE  EB 12						jmp leaveConfirm

 000003B0						fri:
								
 000003B0  C7 05 000002FB R					mov hoursEmployeeWorkedOnDay5, 8				;storing received value in a variable
	   00000008
 000003BA  FF 05 000002B8 R					inc counter
 000003C0  EB 00						jmp leaveConfirm

 000003C2					leaveConfirm:

 000003C2  BA 00000187 R				mov edx, offset confirmedLeave
 000003C7  E8 00000000 E				call writestring									;displaying the prompt to tell user that leave has been confirmed
 000003CC  E8 00000000 E				call crlf
 000003D1  E8 00000000 E				call crlf

 000003D6  E9 FFFFFCA0					jmp start

 000003DB					L3:
 000003DB  E8 00000000 E				call crlf
 000003E0  BA 000002FF R				mov edx, offset space
 000003E5  E8 00000000 E				call writestring									
 000003EA  BA 0000028B R				mov edx, offset nameHeading
 000003EF  E8 00000000 E				call writestring									;displaying name heading
 000003F4  BA 00000298 R				mov edx, offset dayHeading
 000003F9  E8 00000000 E				call writestring									;displaying day heading
 000003FE  BA 000002A4 R				mov edx, offset hourHeading
 00000403  E8 00000000 E				call writestring									;displaying hour heading
 00000408  E8 00000000 E				call crlf

							INVOKE print, day1, hoursEmployeeWorkedOnDay1		;procedure to display on console
 0000040D  FF 35 000002EB R *	    push   hoursEmployeeWorkedOnDay1
 00000413  FF 35 000002C8 R *	    push   day1
 00000419  E8 000001D0	   *	    call   print
 0000041E  E8 00000000 E				call crlf
							INVOKE print, day2, hoursEmployeeWorkedOnDay2		;procedure to display on console
 00000423  FF 35 000002EF R *	    push   hoursEmployeeWorkedOnDay2
 00000429  FF 35 000002CC R *	    push   day2
 0000042F  E8 000001BA	   *	    call   print
 00000434  E8 00000000 E				call crlf
							INVOKE print, day3, hoursEmployeeWorkedOnDay3		;procedure to display on console
 00000439  FF 35 000002F3 R *	    push   hoursEmployeeWorkedOnDay3
 0000043F  FF 35 000002D0 R *	    push   day3
 00000445  E8 000001A4	   *	    call   print
 0000044A  E8 00000000 E				call crlf
							INVOKE print, day4, hoursEmployeeWorkedOnDay4		;procedure to display on console
 0000044F  FF 35 000002F7 R *	    push   hoursEmployeeWorkedOnDay4
 00000455  FF 35 000002D4 R *	    push   day4
 0000045B  E8 0000018E	   *	    call   print
 00000460  E8 00000000 E				call crlf
							INVOKE print, day5, hoursEmployeeWorkedOnDay5		;procedure to display on console
 00000465  FF 35 000002FB R *	    push   hoursEmployeeWorkedOnDay5
 0000046B  FF 35 000002D8 R *	    push   day5
 00000471  E8 00000178	   *	    call   print
 00000476  E8 00000000 E				call crlf


 0000047B  E8 00000000 E				call crlf
 00000480  E8 00000000 E				call crlf
 00000485  BA 0000036D R				mov edx, offset hoursPrompt	
 0000048A  E8 00000000 E				call writeString
 0000048F  E8 FFFFFB6C					call calSum											;calculating sum of hours
 00000494  A3 000002C4 R				mov totalHours, eax
 00000499  E8 00000000 E				call writeint
 0000049E  E8 00000000 E				call crlf
 000004A3  E8 00000000 E				call crlf

 000004A8  BA 00000382 R				mov edx, offset totalPayPrompt
 000004AD  E8 00000000 E				call writestring
 000004B2  F7 25 000002B3 R				mul salaryPerHour									;calculating total salary
 000004B8  A3 000002C0 R				mov totalPay, eax
 000004BD  E8 00000000 E				call writeint
 000004C2  E8 00000000 E				call crlf
 000004C7  E8 00000000 E				call crlf

 000004CC  E9 FFFFFBAA					jmp start

 000004D1					L4:
 000004D1  E8 00000000 E				call crlf
 000004D6  BA 000001A2 R				mov edx, offset deniedLeave	
 000004DB  E8 00000000 E				call writestring									;prompt to display when the leave is denied
 000004E0  E8 00000000 E				call crlf
 000004E5  E8 00000000 E				call crlf

 000004EA  E9 FFFFFB8C			        jmp start

 000004EF				err:
 000004EF  E8 00000000 E		    call crlf
 000004F4  BA 00000308 R		    mov edx, offset error
 000004F9  E8 00000000 E			call writestring										;error handling

 000004FE  E8 00000000 E			call crlf
 00000503  E8 00000000 E			call crlf

 00000508  E9 FFFFFB6E				jmp start

 0000050D				generatePaySlip:

 0000050D  E8 00000000 E			call crlf
 00000512  E8 00000000 E			call crlf

 00000517  BA 000001B8 R			mov edx, offset playSlip
 0000051C  E8 00000000 E			call writestring
 00000521  E8 00000000 E			call crlf
 00000526  E8 00000000 E			call crlf

 0000052B  BA 0000022D R			mov edx, offset paySlipName
 00000530  E8 00000000 E			call writestring
						
 00000535  BA 000002DC R			mov edx, offset nameOfEmployee
 0000053A  E8 00000000 E			call writestring
 0000053F  E8 00000000 E			call crlf
 00000544  E8 00000000 E			call crlf

 00000549  BA 00000246 R			mov edx, offset paySlipHours
 0000054E  E8 00000000 E			call writestring
 00000553  E8 FFFFFAA8				call calSum											;calculating sum of hours
 00000558  E8 00000000 E			call writeint
 0000055D  E8 00000000 E			call crlf
 00000562  E8 00000000 E			call crlf
						
 00000567  BA 00000270 R			mov edx, offset	paySlipSalary
 0000056C  E8 00000000 E			call writestring
 00000571  F7 25 000002B3 R			mul salaryPerHour									;calculating total salary
 00000577  E8 00000000 E			call writeint

 0000057C  E8 00000000 E			call crlf
 00000581  E8 00000000 E			call crlf
 00000586  BA 000001F3 R			mov edx, offset ending
 0000058B  E8 00000000 E			call writestring
 00000590  E8 00000000 E			call crlf
 00000595  E8 00000000 E			call crlf
 0000059A  E9 FFFFFADC				jmp start
					
 0000059F				_exit:

						INVOKE CreateFile,
						ADDR fileToStoreName, ; ptr to filename
						GENERIC_WRITE, ; mode = Can read
						DO_NOT_SHARE, ; share mode
						NULL, ; ptr to security attributes
						OPEN_EXISTING, ; open an existing file
						FILE_ATTRIBUTE_NORMAL, ; normal file attribute
						0 ; not used
 0000059F  6A 00	   *	    push   +000000000h
 000005A1  68 00000080	   *	    push   +000000080h
 000005A6  6A 03	   *	    push   +000000003h
 000005A8  6A 00	   *	    push   +000000000h
 000005AA  6A 00	   *	    push   +000000000h
 000005AC  68 40000000	   *	    push   +040000000h
 000005B1  68 00000481 R   *	    push   OFFSET fileToStoreName
 000005B6  E8 00000000 E   *	    call   CreateFileA

 000005BB  83 F8 FF				cmp eax, INVALID_HANDLE_VALUE
 000005BE  74 29				je errr
 000005C0  A3 0000049C R			mov filehandle, eax ; Copy handle to variable


						INVOKE WriteFile,
						filehandle, ; file handle
						addr nameOfEmployee, ; msg to write
						sizeof nameOfEmployee, ; size of bytes to write
						addr bytesWritten, ; num bytes written
						0
 000005C5  6A 00	   *	    push   +000000000h
 000005C7  68 000004A0 R   *	    push   OFFSET bytesWritten
 000005CC  6A 0F	   *	    push   +00000000Fh
 000005CE  68 000002DC R   *	    push   OFFSET nameOfEmployee
 000005D3  FF 35 0000049C R *	    push   filehandle
 000005D9  E8 00000000 E   *	    call   WriteFile

						invoke CloseHandle, filehandle
 000005DE  FF 35 0000049C R *	    push   filehandle
 000005E4  E8 00000000 E   *	    call   CloseHandle
						
 000005E9					errr: 
 000005E9  E8 00000000 E				call writeWindowsMsg
 000005EE			main endp

 000005EE			print proc uses edx, day: dword, hourWorked: dword				;procedure to display user date on console
					
 000005EE  55		   *	    push   ebp
 000005EF  8B EC	   *	    mov    ebp, esp
 000005F1  52		   *	    push   edx
 000005F2  BA 000002FF R		mov edx, offset space
 000005F7  E8 00000000 E		call writestring

 000005FC  BA 000002DC R		mov edx, offset nameOfEmployee
 00000601  E8 00000000 E		call writestring

 00000606  BA 000002FF R		mov edx, offset space
 0000060B  E8 00000000 E		call writestring

 00000610  8B 45 08			mov eax, day
 00000613  E8 00000000 E		call writeint

 00000618  BA 000002FF R		mov edx, offset space
 0000061D  E8 00000000 E		call writestring

 00000622  8B 45 0C			mov eax,  hourWorked
 00000625  E8 00000000 E		call writeint

					ret
 0000062A  5A		   *	    pop    edx
 0000062B  C9		   *	    leave  
 0000062C  C2 0008	   *	    ret    00008h

 0000062F			print endp
				end main
Microsoft (R) Macro Assembler Version 14.23.28106.4	    12/17/19 13:15:47
project.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000004A4 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000062F Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
calSum . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000001E Public STDCALL
main . . . . . . . . . . . . . .	P Near	 0000001E _TEXT	Length= 000005D0 Public STDCALL
  start  . . . . . . . . . . . .	L Near	 0000007B _TEXT	
  L1 . . . . . . . . . . . . . .	L Near	 000000CC _TEXT	
  day_1  . . . . . . . . . . . .	L Near	 0000013F _TEXT	
  day_2  . . . . . . . . . . . .	L Near	 00000150 _TEXT	
  day_3  . . . . . . . . . . . .	L Near	 00000161 _TEXT	
  day_4  . . . . . . . . . . . .	L Near	 00000172 _TEXT	
  day_5  . . . . . . . . . . . .	L Near	 00000183 _TEXT	
  hours  . . . . . . . . . . . .	L Near	 00000194 _TEXT	
  monday . . . . . . . . . . . .	L Near	 000001CB _TEXT	
  tuesday  . . . . . . . . . . .	L Near	 000001E5 _TEXT	
  wednesday  . . . . . . . . . .	L Near	 000001FF _TEXT	
  thursday . . . . . . . . . . .	L Near	 00000219 _TEXT	
  friday . . . . . . . . . . . .	L Near	 00000233 _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 0000024D _TEXT	
  days_1 . . . . . . . . . . . .	L Near	 000002E6 _TEXT	
  days_2 . . . . . . . . . . . .	L Near	 000002F7 _TEXT	
  days_3 . . . . . . . . . . . .	L Near	 00000308 _TEXT	
  days_4 . . . . . . . . . . . .	L Near	 00000319 _TEXT	
  days_5 . . . . . . . . . . . .	L Near	 0000032A _TEXT	
  hour . . . . . . . . . . . . .	L Near	 0000033B _TEXT	
  mon  . . . . . . . . . . . . .	L Near	 00000368 _TEXT	
  tues . . . . . . . . . . . . .	L Near	 0000037A _TEXT	
  wed  . . . . . . . . . . . . .	L Near	 0000038C _TEXT	
  thurs  . . . . . . . . . . . .	L Near	 0000039E _TEXT	
  fri  . . . . . . . . . . . . .	L Near	 000003B0 _TEXT	
  leaveConfirm . . . . . . . . .	L Near	 000003C2 _TEXT	
  L3 . . . . . . . . . . . . . .	L Near	 000003DB _TEXT	
  L4 . . . . . . . . . . . . . .	L Near	 000004D1 _TEXT	
  err  . . . . . . . . . . . . .	L Near	 000004EF _TEXT	
  generatePaySlip  . . . . . . .	L Near	 0000050D _TEXT	
  _exit  . . . . . . . . . . . .	L Near	 0000059F _TEXT	
  errr . . . . . . . . . . . . .	L Near	 000005E9 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
print  . . . . . . . . . . . . .	P Near	 000005EE _TEXT	Length= 00000041 Public STDCALL
  day  . . . . . . . . . . . . .	DWord	 bp + 00000008
  hourWorked . . . . . . . . . .	DWord	 bp + 0000000C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
bytesWritten . . . . . . . . . .	DWord	 000004A0 _DATA	
confirmedLeave . . . . . . . . .	Byte	 00000187 _DATA	
counter  . . . . . . . . . . . .	DWord	 000002B8 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
day1 . . . . . . . . . . . . . .	DWord	 000002C8 _DATA	
day2 . . . . . . . . . . . . . .	DWord	 000002CC _DATA	
day3 . . . . . . . . . . . . . .	DWord	 000002D0 _DATA	
day4 . . . . . . . . . . . . . .	DWord	 000002D4 _DATA	
day5 . . . . . . . . . . . . . .	DWord	 000002D8 _DATA	
dayEnter . . . . . . . . . . . .	Byte	 0000010A _DATA	
dayHeading . . . . . . . . . . .	Byte	 00000298 _DATA	
deniedLeave  . . . . . . . . . .	Byte	 000001A2 _DATA	
ending . . . . . . . . . . . . .	Byte	 000001F3 _DATA	
equals . . . . . . . . . . . . .	Byte	 0000038E _DATA	
error  . . . . . . . . . . . . .	Byte	 00000308 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
fileToStoreHours . . . . . . . .	Byte	 0000048A _DATA	
fileToStoreName  . . . . . . . .	Byte	 00000481 _DATA	
fileToStorePay . . . . . . . . .	Byte	 00000494 _DATA	
filehandle . . . . . . . . . . .	DWord	 0000049C _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
hourHeading  . . . . . . . . . .	Byte	 000002A4 _DATA	
hoursEmployeeWorkedOnDay1  . . .	DWord	 000002EB _DATA	
hoursEmployeeWorkedOnDay2  . . .	DWord	 000002EF _DATA	
hoursEmployeeWorkedOnDay3  . . .	DWord	 000002F3 _DATA	
hoursEmployeeWorkedOnDay4  . . .	DWord	 000002F7 _DATA	
hoursEmployeeWorkedOnDay5  . . .	DWord	 000002FB _DATA	
hoursEnter . . . . . . . . . . .	Byte	 0000011A _DATA	
hoursPrompt  . . . . . . . . . .	Byte	 0000036D _DATA	
leaveConfirmation  . . . . . . .	Byte	 00000143 _DATA	
leaveCount . . . . . . . . . . .	Byte	 000002B7 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
menu . . . . . . . . . . . . . .	Byte	 00000050 _DATA	
nameEnter  . . . . . . . . . . .	Byte	 000000F8 _DATA	
nameHeading  . . . . . . . . . .	Byte	 0000028B _DATA	
nameOfEmployee . . . . . . . . .	Byte	 000002DC _DATA	
paySlipHours . . . . . . . . . .	Byte	 00000246 _DATA	
paySlipName  . . . . . . . . . .	Byte	 0000022D _DATA	
paySlipSalary  . . . . . . . . .	Byte	 00000270 _DATA	
playSlip . . . . . . . . . . . .	Byte	 000001B8 _DATA	
printCounter . . . . . . . . . .	DWord	 000002BC _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
salaryPerHour  . . . . . . . . .	DWord	 000002B3 _DATA	
selection  . . . . . . . . . . .	Byte	 000000D3 _DATA	
space  . . . . . . . . . . . . .	Byte	 000002FF _DATA	
titleOfProject . . . . . . . . .	Byte	 00000000 _DATA	
totalHours . . . . . . . . . . .	DWord	 000002C4 _DATA	
totalPayPrompt . . . . . . . . .	Byte	 00000382 _DATA	
totalPay . . . . . . . . . . . .	DWord	 000002C0 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
